-- Migration: Initial schema creation
-- Created: 2025-01-21T12:00:00

-- Create enum type for job status
CREATE TYPE job_status AS ENUM (
    'uploaded',
    'segmenting', 
    'converting',
    'enhancing',
    'completed',
    'failed'
);

-- Create analysis_jobs table
CREATE TABLE analysis_jobs (
    job_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id VARCHAR(255) NOT NULL,
    original_image_key VARCHAR(500) NOT NULL,
    status job_status NOT NULL DEFAULT 'uploaded',
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    error_message TEXT
);

-- Create analysis_results table
CREATE TABLE analysis_results (
    result_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    job_id UUID NOT NULL REFERENCES analysis_jobs(job_id) ON DELETE CASCADE,
    segmentation_result_key VARCHAR(500),
    image_description TEXT,
    enhanced_report TEXT,
    confidence_scores JSONB,
    processing_metrics JSONB,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

-- Create indexes for better query performance
CREATE INDEX idx_analysis_jobs_user_id ON analysis_jobs(user_id);
CREATE INDEX idx_analysis_jobs_status ON analysis_jobs(status);
CREATE INDEX idx_analysis_jobs_created_at ON analysis_jobs(created_at);
CREATE INDEX idx_analysis_results_job_id ON analysis_results(job_id);
CREATE INDEX idx_analysis_results_created_at ON analysis_results(created_at);

-- Create function to automatically update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger to automatically update updated_at on analysis_jobs
CREATE TRIGGER update_analysis_jobs_updated_at 
    BEFORE UPDATE ON analysis_jobs 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- Add comments to tables and columns
COMMENT ON TABLE analysis_jobs IS 'Tracks MRI image analysis jobs and their processing status';
COMMENT ON COLUMN analysis_jobs.job_id IS 'Unique identifier for the analysis job';
COMMENT ON COLUMN analysis_jobs.user_id IS 'Identifier for the user who submitted the job';
COMMENT ON COLUMN analysis_jobs.original_image_key IS 'S3 key for the original MRI image';
COMMENT ON COLUMN analysis_jobs.status IS 'Current processing status of the job';
COMMENT ON COLUMN analysis_jobs.created_at IS 'Timestamp when the job was created';
COMMENT ON COLUMN analysis_jobs.updated_at IS 'Timestamp when the job was last updated';
COMMENT ON COLUMN analysis_jobs.error_message IS 'Error message if the job failed';

COMMENT ON TABLE analysis_results IS 'Stores results from each stage of the analysis pipeline';
COMMENT ON COLUMN analysis_results.result_id IS 'Unique identifier for the analysis result';
COMMENT ON COLUMN analysis_results.job_id IS 'Reference to the parent analysis job';
COMMENT ON COLUMN analysis_results.segmentation_result_key IS 'S3 key for the segmentation result image';
COMMENT ON COLUMN analysis_results.image_description IS 'Text description generated by the VLM model';
COMMENT ON COLUMN analysis_results.enhanced_report IS 'Enhanced medical report generated by LLM with RAG';
COMMENT ON COLUMN analysis_results.confidence_scores IS 'JSON object containing confidence scores from each processing stage';
COMMENT ON COLUMN analysis_results.processing_metrics IS 'JSON object containing processing time and performance metrics';
COMMENT ON COLUMN analysis_results.created_at IS 'Timestamp when the result was created';